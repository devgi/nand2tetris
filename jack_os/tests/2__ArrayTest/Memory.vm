function Memory.init 0
push constant 0
pop static 1
push constant 2
pop static 4
push constant 2
neg
pop static 2
push constant 1
neg
pop static 3
push constant 5
pop static 7
push constant 6
pop static 8
push constant 2048
pop static 5
push constant 16483
pop static 6
push static 5
push constant 2
add
pop static 0
push static 3
push static 0
add
push static 6
push static 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 1
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 2
push static 0
pop local 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 7
call Sys.error 1
return
label IF_FALSE0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push static 3
push local 0
add
pop pointer 1
push that 0
push argument 0
lt
push static 4
add
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push argument 0
add
push static 4
add
pop local 1
push static 3
push local 1
add
push static 3
push local 0
add
pop pointer 1
push that 0
push local 1
push local 0
sub
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
push local 1
add
push static 2
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 3
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
label IF_FALSE1
push static 2
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push static 8
call Sys.error 1
return
function Memory.deAlloc 1
push static 2
push argument 0
add
pop pointer 1
push that 0
pop local 0
push static 3
push argument 0
add
push local 0
push argument 0
sub
push static 3
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
push argument 0
add
push static 2
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
